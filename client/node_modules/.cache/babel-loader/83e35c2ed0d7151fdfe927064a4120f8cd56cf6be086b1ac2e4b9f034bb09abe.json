{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\EchoesOfHistory\\\\client\\\\src\\\\pages\\\\CharacterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport CharacterCarousel from '../components/CharacterCarousel'; // Import the carousel component\nimport HomeNavbar from '../components/HomeNavbar';\nimport { useNavigate } from 'react-router-dom'; // Import the hook to navigate\nimport backgroundImage from '../assets/character_background.png'; // Import the background image\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterPage = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(''); // Store the search query\n  const [filteredCharacters, setFilteredCharacters] = useState([]); // Store filtered characters based on search query\n  const navigate = useNavigate(); // To navigate to the character detail page\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/characters');\n        const data = await response.json();\n        setCharacters(data);\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Filter characters based on search query\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredCharacters([]);\n    } else {\n      const filtered = characters.filter(character => character.name.toLowerCase().includes(searchQuery.toLowerCase())).slice(0, 3); // Display up to 3 suggestions\n      setFilteredCharacters(filtered);\n    }\n  }, [searchQuery, characters]);\n\n  // Handle user selecting a character\n  const handleCharacterSelect = characterId => {\n    navigate(`/character/${characterId}`); // Redirect to the character detail page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-cover bg-center\",\n    style: {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      backgroundBlendMode: 'overlay',\n      backgroundColor: 'rgba(0,0,0,0.6)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(HomeNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto py-8 mt-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-md mx-auto mb-8 z-20\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"w-full text-white bg-transparent border border-orange-300 px-4 py-2 text-black rounded-lg\",\n          placeholder: \"Search for a character...\",\n          value: searchQuery,\n          onChange: e => setSearchQuery(e.target.value) // Update search query on input change\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), filteredCharacters.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"absolute bg-transparent border border-gray-200 rounded-lg w-full mt-1 max-h-48 overflow-auto z-30\",\n          children: [\" \", filteredCharacters.map(character => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"p-2 cursor-pointer border-b hover:bg-gray-100\",\n            onClick: () => handleCharacterSelect(character._id),\n            children: character.name\n          }, character._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CharacterCarousel, {\n        characters: characters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterPage, \"Y1TyRU/83ceBWrievwvee8Cf/3A=\", false, function () {\n  return [useNavigate];\n});\n_c = CharacterPage;\nexport default CharacterPage;\nvar _c;\n$RefreshReg$(_c, \"CharacterPage\");","map":{"version":3,"names":["React","useEffect","useState","CharacterCarousel","HomeNavbar","useNavigate","backgroundImage","jsxDEV","_jsxDEV","CharacterPage","_s","characters","setCharacters","searchQuery","setSearchQuery","filteredCharacters","setFilteredCharacters","navigate","fetchCharacters","response","fetch","data","json","error","console","trim","filtered","filter","character","name","toLowerCase","includes","slice","handleCharacterSelect","characterId","className","style","backgroundSize","backgroundPosition","backgroundRepeat","backgroundBlendMode","backgroundColor","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","map","onClick","_id","_c","$RefreshReg$"],"sources":["C:/Project/EchoesOfHistory/client/src/pages/CharacterPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport CharacterCarousel from '../components/CharacterCarousel'; // Import the carousel component\r\nimport HomeNavbar from '../components/HomeNavbar';\r\nimport { useNavigate } from 'react-router-dom'; // Import the hook to navigate\r\nimport backgroundImage from '../assets/character_background.png'; // Import the background image\r\n\r\nconst CharacterPage = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(''); // Store the search query\r\n  const [filteredCharacters, setFilteredCharacters] = useState([]); // Store filtered characters based on search query\r\n  const navigate = useNavigate(); // To navigate to the character detail page\r\n\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/characters');\r\n        const data = await response.json();\r\n        setCharacters(data);\r\n      } catch (error) {\r\n        console.error('Error fetching characters:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Filter characters based on search query\r\n  useEffect(() => {\r\n    if (searchQuery.trim() === '') {\r\n      setFilteredCharacters([]);\r\n    } else {\r\n      const filtered = characters\r\n        .filter((character) =>\r\n          character.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n        )\r\n        .slice(0, 3); // Display up to 3 suggestions\r\n      setFilteredCharacters(filtered);\r\n    }\r\n  }, [searchQuery, characters]);\r\n\r\n  // Handle user selecting a character\r\n  const handleCharacterSelect = (characterId) => {\r\n    navigate(`/character/${characterId}`); // Redirect to the character detail page\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"min-h-screen bg-cover bg-center\"\r\n      style={{\r\n        backgroundImage: `url(${backgroundImage})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundBlendMode: 'overlay',\r\n        backgroundColor: 'rgba(0,0,0,0.6)',\r\n      }}\r\n    >\r\n      <HomeNavbar />\r\n\r\n      <div className=\"container mx-auto py-8 mt-12\">\r\n        {/* Search Bar */}\r\n        <div className=\"relative w-full max-w-md mx-auto mb-8 z-20\"> {/* Added z-20 */}\r\n          <input\r\n            type=\"text\"\r\n            className=\"w-full text-white bg-transparent border border-orange-300 px-4 py-2 text-black rounded-lg\"\r\n            placeholder=\"Search for a character...\"\r\n            value={searchQuery}\r\n            onChange={(e) => setSearchQuery(e.target.value)} // Update search query on input change\r\n          />\r\n          {filteredCharacters.length > 0 && (\r\n            <ul className=\"absolute bg-transparent border border-gray-200 rounded-lg w-full mt-1 max-h-48 overflow-auto z-30\"> {/* Ensure a higher z-index */}\r\n              {filteredCharacters.map((character) => (\r\n                <li\r\n                  key={character._id}\r\n                  className=\"p-2 cursor-pointer border-b hover:bg-gray-100\"\r\n                  onClick={() => handleCharacterSelect(character._id)}\r\n                >\r\n                  {character.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n\r\n        {/* Render CharacterCarousel here */}\r\n        <CharacterCarousel characters={characters} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}