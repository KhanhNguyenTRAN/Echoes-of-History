{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\EchoesOfHistory\\\\client\\\\src\\\\pages\\\\BlogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BlogForm from '../components/BlogForm';\nimport BlogPostList from '../components/BlogPostList';\nimport HomeNavbar from '../components/HomeNavbar';\nimport BackgroundImage from '../assets/character_background.png'; // Update path as needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlogPage = () => {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const [submitting, setSubmitting] = useState(false);\n\n  // Fetch blog posts\n  useEffect(() => {\n    const fetchBlogPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/blogs');\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setBlogPosts(data);\n        } else {\n          throw new Error(\"Unexpected data format. Expected an array.\");\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching blog posts:', err);\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchBlogPosts();\n  }, []);\n\n  // Handle input change for the new post form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPost(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch('http://localhost:5000/api/blogs', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(newPost)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create post');\n      }\n      const createdPost = await response.json();\n      setBlogPosts(prevPosts => [createdPost, ...prevPosts]); // Add new post to top of the list\n      setNewPost({\n        title: '',\n        content: ''\n      }); // Reset form fields\n      setSubmitting(false);\n    } catch (err) {\n      console.error('Error creating post:', err);\n      setError(err.message);\n      setSubmitting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl mt-20\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl mt-20 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-0 left-0 w-full z-10\",\n      children: /*#__PURE__*/_jsxDEV(HomeNavbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative h-screen bg-cover bg-center overflow-hidden\",\n      style: {\n        backgroundImage: `url(${BackgroundImage})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundBlendMode: 'overlay',\n        backgroundColor: 'rgba(0,0,0,0.6)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mx-auto py-8 h-full flex flex-col justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-center mb-8\",\n          children: \"Blog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlogForm, {\n          newPost: newPost,\n          handleInputChange: handleInputChange,\n          handleFormSubmit: handleFormSubmit,\n          submitting: submitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BlogPostList, {\n          blogPosts: blogPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BlogPage, \"hQMqtrA6ClFEssVVBmvueBgtNMM=\");\n_c = BlogPage;\nexport default BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["React","useEffect","useState","BlogForm","BlogPostList","HomeNavbar","BackgroundImage","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogPage","_s","blogPosts","setBlogPosts","loading","setLoading","error","setError","newPost","setNewPost","title","content","submitting","setSubmitting","fetchBlogPosts","response","fetch","data","json","Array","isArray","Error","err","console","message","handleInputChange","e","name","value","target","prevState","handleFormSubmit","preventDefault","token","localStorage","getItem","method","headers","Authorization","body","JSON","stringify","ok","createdPost","prevPosts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","backgroundSize","backgroundPosition","backgroundBlendMode","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Project/EchoesOfHistory/client/src/pages/BlogPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BlogForm from '../components/BlogForm';\r\nimport BlogPostList from '../components/BlogPostList';\r\nimport HomeNavbar from '../components/HomeNavbar';\r\nimport BackgroundImage from '../assets/character_background.png'; // Update path as needed\r\n\r\nconst BlogPage = () => {\r\n  const [blogPosts, setBlogPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [newPost, setNewPost] = useState({ title: '', content: '' });\r\n  const [submitting, setSubmitting] = useState(false);\r\n\r\n  // Fetch blog posts\r\n  useEffect(() => {\r\n    const fetchBlogPosts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/blogs');\r\n        const data = await response.json();\r\n\r\n        if (Array.isArray(data)) {\r\n          setBlogPosts(data);\r\n        } else {\r\n          throw new Error(\"Unexpected data format. Expected an array.\");\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching blog posts:', err);\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBlogPosts();\r\n  }, []);\r\n\r\n  // Handle input change for the new post form\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewPost((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSubmitting(true);\r\n    const token = localStorage.getItem('token');\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/blogs', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(newPost),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to create post');\r\n      }\r\n\r\n      const createdPost = await response.json();\r\n      setBlogPosts((prevPosts) => [createdPost, ...prevPosts]); // Add new post to top of the list\r\n      setNewPost({ title: '', content: '' }); // Reset form fields\r\n      setSubmitting(false);\r\n    } catch (err) {\r\n      console.error('Error creating post:', err);\r\n      setError(err.message);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center text-xl mt-20\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center text-xl mt-20 text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Navbar */}\r\n      <div className=\"absolute top-0 left-0 w-full z-10\">\r\n        <HomeNavbar />\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div\r\n        className=\"relative h-screen bg-cover bg-center overflow-hidden\"\r\n        style={{\r\n          backgroundImage: `url(${BackgroundImage})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundBlendMode: 'overlay',\r\n          backgroundColor: 'rgba(0,0,0,0.6)',\r\n        }}\r\n      >\r\n        <div className=\"container mx-auto py-8 h-full flex flex-col justify-center\">\r\n          <h1 className=\"text-3xl font-bold text-center mb-8\">Blog</h1>\r\n\r\n          {/* Form to Create New Post */}\r\n          <BlogForm\r\n            newPost={newPost}\r\n            handleInputChange={handleInputChange}\r\n            handleFormSubmit={handleFormSubmit}\r\n            submitting={submitting}\r\n          />\r\n\r\n          {/* Blog Post List */}\r\n          <BlogPostList blogPosts={blogPosts} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}