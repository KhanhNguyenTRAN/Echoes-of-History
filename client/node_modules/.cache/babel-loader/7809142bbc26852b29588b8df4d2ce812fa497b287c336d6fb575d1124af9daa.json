{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\HistoricalWeb\\\\client\\\\src\\\\components\\\\CharacterCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport CharacterCard from './CharacterCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterCarousel = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [isDragging, setIsDragging] = useState(false); // Track if dragging\n  const [startX, setStartX] = useState(0); // Starting X position for dragging\n  const [scrollLeft, setScrollLeft] = useState(0); // Initial scroll position\n  const carouselRef = useRef(null); // Ref to the carousel\n\n  // Fetch characters from the server\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/characters');\n        const data = await response.json();\n        setCharacters(data);\n      } catch (error) {\n        console.error('Error fetching characters:', error);\n      }\n    };\n    fetchCharacters();\n  }, []);\n\n  // Handle mouse down (start dragging)\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    setStartX(e.pageX - carouselRef.current.offsetLeft); // Get initial X position\n    setScrollLeft(carouselRef.current.scrollLeft); // Store the initial scroll position\n  };\n\n  // Handle mouse move (drag)\n  const handleMouseMove = e => {\n    if (!isDragging) return; // Only move if dragging\n    const x = e.pageX - carouselRef.current.offsetLeft; // Get current X position\n    const walk = (x - startX) * 1.5; // The distance moved, scaled for effect\n    carouselRef.current.scrollLeft = scrollLeft - walk; // Adjust the scroll position\n  };\n\n  // Handle mouse up (stop dragging)\n  const handleMouseUp = () => {\n    setIsDragging(false); // Stop dragging\n  };\n\n  // Handle mouse leave (stop dragging when leaving the carousel)\n  const handleMouseLeave = () => {\n    setIsDragging(false); // Stop dragging\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative w-full overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex cursor-grab transition-transform duration-500 overflow-x-auto\",\n      ref: carouselRef // Attach the ref to the carousel div\n      ,\n      onMouseDown: handleMouseDown // Start dragging\n      ,\n      onMouseMove: handleMouseMove // Handle dragging\n      ,\n      onMouseUp: handleMouseUp // Stop dragging\n      ,\n      onMouseLeave: handleMouseLeave // Stop dragging if the mouse leaves\n      ,\n      style: {\n        userSelect: 'none'\n      } // Prevent text selection while dragging\n      ,\n      children: characters.map(character => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        imageUrl: character.imageUrl,\n        name: character.name\n      }, character._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterCarousel, \"S4S2WLTPavkReKjdRe0yEK882zo=\");\n_c = CharacterCarousel;\nexport default CharacterCarousel;\nvar _c;\n$RefreshReg$(_c, \"CharacterCarousel\");","map":{"version":3,"names":["React","useEffect","useState","useRef","CharacterCard","jsxDEV","_jsxDEV","CharacterCarousel","_s","characters","setCharacters","isDragging","setIsDragging","startX","setStartX","scrollLeft","setScrollLeft","carouselRef","fetchCharacters","response","fetch","data","json","error","console","handleMouseDown","e","pageX","current","offsetLeft","handleMouseMove","x","walk","handleMouseUp","handleMouseLeave","className","children","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","style","userSelect","map","character","imageUrl","name","_id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/HistoricalWeb/client/src/components/CharacterCarousel.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport CharacterCard from './CharacterCard';\r\n\r\nconst CharacterCarousel = () => {\r\n  const [characters, setCharacters] = useState([]);\r\n  const [isDragging, setIsDragging] = useState(false); // Track if dragging\r\n  const [startX, setStartX] = useState(0); // Starting X position for dragging\r\n  const [scrollLeft, setScrollLeft] = useState(0); // Initial scroll position\r\n  const carouselRef = useRef(null); // Ref to the carousel\r\n\r\n  // Fetch characters from the server\r\n  useEffect(() => {\r\n    const fetchCharacters = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/characters');\r\n        const data = await response.json();\r\n        setCharacters(data);\r\n      } catch (error) {\r\n        console.error('Error fetching characters:', error);\r\n      }\r\n    };\r\n\r\n    fetchCharacters();\r\n  }, []);\r\n\r\n  // Handle mouse down (start dragging)\r\n  const handleMouseDown = (e) => {\r\n    setIsDragging(true);\r\n    setStartX(e.pageX - carouselRef.current.offsetLeft); // Get initial X position\r\n    setScrollLeft(carouselRef.current.scrollLeft); // Store the initial scroll position\r\n  };\r\n\r\n  // Handle mouse move (drag)\r\n  const handleMouseMove = (e) => {\r\n    if (!isDragging) return; // Only move if dragging\r\n    const x = e.pageX - carouselRef.current.offsetLeft; // Get current X position\r\n    const walk = (x - startX) * 1.5; // The distance moved, scaled for effect\r\n    carouselRef.current.scrollLeft = scrollLeft - walk; // Adjust the scroll position\r\n  };\r\n\r\n  // Handle mouse up (stop dragging)\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false); // Stop dragging\r\n  };\r\n\r\n  // Handle mouse leave (stop dragging when leaving the carousel)\r\n  const handleMouseLeave = () => {\r\n    setIsDragging(false); // Stop dragging\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full overflow-hidden\">\r\n      {/* Carousel Cards */}\r\n      <div\r\n        className=\"flex cursor-grab transition-transform duration-500 overflow-x-auto\"\r\n        ref={carouselRef} // Attach the ref to the carousel div\r\n        onMouseDown={handleMouseDown} // Start dragging\r\n        onMouseMove={handleMouseMove} // Handle dragging\r\n        onMouseUp={handleMouseUp} // Stop dragging\r\n        onMouseLeave={handleMouseLeave} // Stop dragging if the mouse leaves\r\n        style={{ userSelect: 'none' }} // Prevent text selection while dragging\r\n      >\r\n        {characters.map((character) => (\r\n          <CharacterCard\r\n            key={character._id}\r\n            imageUrl={character.imageUrl}\r\n            name={character.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}