{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\EchoesOfHistory\\\\client\\\\src\\\\pages\\\\BlogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport BlogPost from '../components/BlogPost'; // Import the BlogPost component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogPage = () => {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]); // Ensure this is initialized as an empty array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // To handle potential errors\n\n  useEffect(() => {\n    const fetchBlogPosts = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/blog');\n        const data = await response.json();\n\n        // Ensure that the data is an array\n        if (Array.isArray(data)) {\n          setBlogPosts(data);\n        } else {\n          // If the data is not an array, throw an error\n          throw new Error(\"Unexpected data format. Expected an array.\");\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching blog posts:', err);\n        setError(err.message); // Capture the error\n        setLoading(false);\n      }\n    };\n    fetchBlogPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl mt-20\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-xl mt-20 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-center mb-8\",\n      children: \"Blog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), blogPosts.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-lg\",\n      children: \"No blog posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-8\",\n      children: blogPosts.map(post => /*#__PURE__*/_jsxDEV(BlogPost, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BlogPage, \"k4UwTUA5JKf/XrteltOtVb6Xk6E=\");\n_c = BlogPage;\nexport default BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");","map":{"version":3,"names":["React","useEffect","useState","BlogPost","jsxDEV","_jsxDEV","BlogPage","_s","blogPosts","setBlogPosts","loading","setLoading","error","setError","fetchBlogPosts","response","fetch","data","json","Array","isArray","Error","err","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","_id","_c","$RefreshReg$"],"sources":["C:/Project/EchoesOfHistory/client/src/pages/BlogPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BlogPost from '../components/BlogPost'; // Import the BlogPost component\r\n\r\nconst BlogPage = () => {\r\n  const [blogPosts, setBlogPosts] = useState([]);  // Ensure this is initialized as an empty array\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);  // To handle potential errors\r\n\r\n  useEffect(() => {\r\n    const fetchBlogPosts = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/blog');\r\n        const data = await response.json();\r\n\r\n        // Ensure that the data is an array\r\n        if (Array.isArray(data)) {\r\n          setBlogPosts(data);\r\n        } else {\r\n          // If the data is not an array, throw an error\r\n          throw new Error(\"Unexpected data format. Expected an array.\");\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching blog posts:', err);\r\n        setError(err.message);  // Capture the error\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBlogPosts();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div className=\"text-center text-xl mt-20\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-center text-xl mt-20 text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-8\">\r\n      <h1 className=\"text-3xl font-bold text-center mb-8\">Blog</h1>\r\n      {blogPosts.length === 0 ? (\r\n        <p className=\"text-center text-lg\">No blog posts available.</p>\r\n      ) : (\r\n        <div className=\"space-y-8\">\r\n          {blogPosts.map((post) => (\r\n            <BlogPost key={post._id} post={post} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}