{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project\\\\HistoricalWeb\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n\n// Mock authentication function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = () => {\n  return localStorage.getItem('token'); // Assuming token is stored in localStorage after login\n};\nconst ProtectedRoute = ({\n  children\n}) => {\n  return isAuthenticated() ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 41\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","isAuthenticated","localStorage","getItem","ProtectedRoute","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project/HistoricalWeb/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\n// Mock authentication function\r\nconst isAuthenticated = () => {\r\n  return localStorage.getItem('token');  // Assuming token is stored in localStorage after login\r\n};\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  return isAuthenticated() ? children : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,OAAOC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAE;AACzC,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,OAAOJ,eAAe,CAAC,CAAC,GAAGI,QAAQ,gBAAGL,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACC,EAAA,GAFIP,cAAc;AAIpB,eAAeA,cAAc;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}